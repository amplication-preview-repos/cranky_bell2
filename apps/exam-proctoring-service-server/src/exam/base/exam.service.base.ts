/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Exam as PrismaExam } from "@prisma/client";

export class ExamServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ExamCountArgs, "select">): Promise<number> {
    return this.prisma.exam.count(args);
  }

  async exams(args: Prisma.ExamFindManyArgs): Promise<PrismaExam[]> {
    return this.prisma.exam.findMany(args);
  }
  async exam(args: Prisma.ExamFindUniqueArgs): Promise<PrismaExam | null> {
    return this.prisma.exam.findUnique(args);
  }
  async createExam(args: Prisma.ExamCreateArgs): Promise<PrismaExam> {
    return this.prisma.exam.create(args);
  }
  async updateExam(args: Prisma.ExamUpdateArgs): Promise<PrismaExam> {
    return this.prisma.exam.update(args);
  }
  async deleteExam(args: Prisma.ExamDeleteArgs): Promise<PrismaExam> {
    return this.prisma.exam.delete(args);
  }
}
